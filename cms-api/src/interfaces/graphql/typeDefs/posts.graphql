type Post {
  id: ID
  userId: Int
  categoryId: Int
  subCategory: Int
  postId: ID
  title: String!
  content: String
  priorityLevel: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  comments: [PostComment]
  advisories: [PostAdvisory]
  attachments: [PostAttachment]
  tags: [Tag]
  draft: Boolean
  scheduled: DateTime
  expiration: DateTime
  published: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

type PostComment {
  id: ID
  name: String
  message: String
  timeStamp: DateTime
}

type PostAdvisory {
  id: ID
  title: String
}

type PostAttachment {
  link: String
  name: String
  updatedAt: DateTime
}

type Query {
  getPosts(
    where: PostFilter,
    offset: Int,
    limit: Int
  ): [Post]
  getPost(where: PostPrimary!): Post
}

type Mutation {
  createPost(data: PostInput!): Post!
  updatePost(where: PostPrimary!, data: PostInput): Boolean
}

input PostInput {
  userId: Int
  categoryId: Int
  subCategory: Int
  postId: ID
  title: String
  content: String
  priorityLevel: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  tags: [TagInput]
  draft: Boolean
  scheduled: DateTime
  expiration: DateTime
  published: DateTime
}

input PostPrimary {
  id: ID!
}

input PostFilter {
  scheduled: Boolean
  published: Boolean
}