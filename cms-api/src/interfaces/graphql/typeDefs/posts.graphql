type Post {
  id: ID
  userId: Int
  categoryId: Int
  subCategory: Int
  postId: ID
  title: String!
  content: String!
  priorityLevel: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  comments: [Comment]
  advisories: [Advisory]
  attachments: [Attachment]
  schedule: DateTime
  expiration: DateTime
  publishedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

type Comment {
  id: ID
  name: String
  message: String
  timeStamp: DateTime
}

type Advisory {
  id: ID
  title: String
}

type Attachment {
  link: String
  name: String
}

type Query {
  getPosts: [Post]
  getPost(where: PostPrimary!): Post
}

type Mutation {
  createPostDraft(data: PostInput!): Post!
  createPost(data: PostInput!): Post!
  updatePost(where: PostPrimary!, data: PostInput): Boolean
}

input PostInput {
  userId: Int
  categoryId: Int
  subCategory: Int
  postId: ID
  title: String
  content: String
  priorityLevel: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  draft: Boolean
  schedule: DateTime
  expiration: DateTime
  publishedAt: DateTime
}

input PostPrimary {
  id: ID!
}