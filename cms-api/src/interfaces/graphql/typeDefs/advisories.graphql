type Advisory {
  id: ID
  advisoryId: Int
  userId: Int
  title: String
  content: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  categoryId: Int
  tags: [Tag]
  verified: Boolean
  draft: Boolean
  publishedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

type AdvisoryPrimary {
  id: ID
}

type Query {
  getAdvisories(where: AdvisoryFilter): [Advisory]!
  getAdvisory(where: AdvisoryPrimaryInput!): Advisory!
}

type Mutation {
  createAdvisoryDraft: AdvisoryPrimary
  saveAdvisory(where: AdvisoryPrimaryInput, data: AdvisoryInput!): Advisory
  publishAdvisory(where: AdvisoryPrimaryInput, data: AdvisoryInput!): Advisory
  deleteAdvisory(where: AdvisoryPrimaryInput!): Boolean
}

input AdvisoryInput {
  advisoryId: Int
  userId: Int
  title: String
  content: String
  source: String
  locationLat: String
  locationLong: String
  locationAddress: String
  categoryId: Int
  tags: [TagInput]
  verified: Boolean
  draft: Boolean
  publishedAt: DateTime
}

input AdvisoryPrimaryInput {
  id: ID!
}

input AdvisoryFilter {
  verified: Boolean
}